@Book{Milton2009,
  author =       {Milton, Michael},
  title =        {Head First Data Analysis},
  year =         {2009},
  isbn =         {9780596153939},
  publisher =    {O'Reilly Media, Inc.}
}


@ARTICLE{Baker2016,
  author =       {Baker, Monya},
  title =        {1,500 scientists lift the lid on reproducibility},
  abstract =     {Survey sheds light on the `crisis' rocking research.},
  journal =      {Nature},
  volume =       {533},
  number =       {7604},
  pages =        {452--454},
  month =        {May},
  year =         {2016}
}


@inproceedings{Mauerer2023,
  author =       {Mauerer, Wolfgang and Klessinger, Stefan and Scherzinger, Stefanie},
  title =        {Beyond the Badge: Reproducibility Engineering as a Lifetime Skill},
  year =         {2023},
  isbn =         {9781450393362},
  publisher =    {Association for Computing Machinery},
  address =      {New York, NY, USA},
  url =          {https://doi.org/10.1145/3528231.3528359},
  doi =          {10.1145/3528231.3528359},
  abstract =     {Ascertaining reproducibility of scientific experiments is receiving increased attention across    disciplines. We argue that the necessary skills are important beyond pure scientific utility, and that they should be taught as part of software engineering (SWE) education. They serve a dual purpose: Apart from acquiring the coveted badges assigned to reproducible research, reproducibility engineering is a lifetime skill for a professional industrial career in computer science.SWE curricula seem an ideal fit for conveying such capabilities, yet they require some extensions, especially given that even at flagship conferences like ICSE, only slightly more than one-third of the technical papers (at the 2021 edition) receive recognition for artefact reusability. Knowledge and capabilities in setting up engineering environments that allow for reproducing artefacts and results over decades (a standard requirement in many traditional engineering disciplines), writing semi-literate commit messages that document crucial steps of a decision-making process and that are tightly coupled with code, or sustainably taming dynamic, quickly changing software dependencies, to name a few: They all contribute to solving the scientific reproducibility crisis, and enable software engineers to build sustainable, long-term maintainable, software-intensive, industrial systems. We propose to teach these skills at the undergraduate level, on par with traditional SWE topics.},
  booktitle =    {Proceedings of the 4th International Workshop on Software Engineering Education for the Next Generation},
  pages =        {1â€“4},
  numpages =     {4},
  keywords =     {reproducibility engineering, teaching software engineering},
  location =     {Pittsburgh, Pennsylvania},
  series =       {SEENG '22}
}


